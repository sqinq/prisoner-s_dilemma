This is a bot that plays the iterative prisoner's dilemma using Q-Learning The benefit of using AI in prisoner's dilemma is that we can predict the other side's behaviour based on its pervious actions or reactions to our choices and choose the next action with the highest expected return. Therefore I am using Q-Learning to study the other playerâ€™s behaviour while playing and use greedy method at each time I choose the next action.

Q[s, a] is stored in a matrix and it is initialized to 0. It is reset when the other side changes because the matrix is studying the behaviour of a specific bot. When make_play is called, we update the matrix. When get_play() is called, it returns the action with higher expected reward. If the difference of the expected return between the two choices is too small (below 0.01), the bot will do tit-for-tat since we are sure that tit-for-tat guarantees a good performance. In this way, we prevents the risk of losing scores by making random choice when we have not collected enough data. Therefore, theoretically this bot should work at least as good as tit-for-tat.